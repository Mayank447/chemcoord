#!/usr/bin/env python
import chemcoord as cc
import argparse


def read_input():
    # Calling parser for reading filename
    parser = argparse.ArgumentParser(
        description=(
            """
            Takes two xyz files and creates the movement from the start file to the end file in steps.
            The created files are called movement$number.xyz
            """
            )
        )
    parser.add_argument("startfile", type=str,
            help = "Name of the startfile.")
    parser.add_argument("endfile", type=str,
            help = (
                """
                Name of the endfile
                """
                )
            )
    parser.add_argument(
        "--steps", 
        help="Number of steps for the movement. The default is 5.",
        default=5
        )
    parser.add_argument(
        "--recursion_level", 
        help="Help text",
        default=2
        )

    args = parser.parse_args()
    return args


args = read_input()


print("Reading files")
start = cc.read.xyz(args.startfile)
end = cc.read.xyz(args.endfile)

similar_end = cc.xyz_functions.make_similar(start, end)

print("Creating zmatrices")
start_zmat = cc.xyz_functions.to_zmat(start, recursion_level = args.recursion_level)
start_buildlist = cc.zmat_functions.build_list(start_zmat)
end_zmat = cc.xyz_functions.to_zmat(similar_end, buildlist=start_buildlist)

list_of_changing_zmat = cc.zmat_functions.changes_from_to_zmat(start_zmat, end_zmat)

print("Writing movement files")
for number, zmat in enumerate(list_of_changing_zmat):
    xyz_temp = cc.zmat_functions.zmat_to_xyz(zmat)
    outputfile = 'moving' + str(number) + '.xyz'
    cc.write.xyz(xyz_temp, outputfile)
